name: 'Upload files to a GitHub release'
description: 'Upload files to a GitHub release (cross-platform)'
author: 'Sven-Hendrik Haase'
branding:
  icon: archive
  color: orange
inputs:
  repo_token:
    description: 'GitHub token.'
    required: true
    default: ${{ github.token }}
  file:
    description: 'Local file to upload.'
    required: true
  tag:
    description: 'Tag to use as a release.'
    required: true
    default: ${{ github.ref }}
  asset_name:
    description: 'Name of the asset. When not provided will use the file name. Unused if file_glob is set to "true".'
  overwrite:
    description: 'Overwrite the release in case it already exists.'
  promote:
    description: 'Promote a prerelease to release. Defaults to "false".'
  file_glob:
    description: 'If true the file can be a glob pattern, asset_name is ignored if this is true.'
  draft:
    description: 'Mark the release as a draft. Defaults to "false".'
  prerelease:
    description: 'Mark the release as a pre-release. Defaults to "false".'
  make_latest:
    description: 'Mark the release the latest release for the repository. Defaults to "true".'
  release_name:
    description: 'Explicitly set a release name. Defaults to empty which will cause the release to take the tag as name on GitHub.'
  body:
    description: 'Content of the release text. Empty by default.'
  target_commit:
    description: 'Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository\"s default branch (usually `main`).'
  repo_name:
    description: 'Specify the name of the GitHub repository in which the GitHub release will be created, edited, and deleted. If the repository is other than the current, it is required to create a personal access token with `repo`, `user`, `admin:repo_hook` scopes to the foreign repository and add it as a secret. Defaults to the current repository'
  generate_release_notes:
    description: 'Generate release notes based on the commit messages between the last release and the current tag. Defaults to "false".'
outputs:
  browser_download_url:
    description: 'The publicly available URL of the asset.'
runs:
  using: 'node20'
  main: 'dist/index.js'
